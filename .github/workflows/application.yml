---
name: Application
on:
  workflow_call:
    inputs:
      jobname:
        type: string
        required: false
        description: 'A jobname passed from the caller workflow'
        default: 'application'
  pull_request:
    paths:
    # Tool
    - '.aqua.yaml'
    # Coverage
    - '.octocov.yml'
    # GitHub Actions
    - '.github/actions/setup-go/action.yaml'
    - '.github/actions/setup-aqua/action.yaml'
    - '.github/workflows/application.yml'
    # Task
    - 'Taskfile.yml'
    - 'tasks/**.task.yml'
    # Go
    - '**.go'
    - 'go.mod'
    - 'go.sum'
permissions: {}
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || inputs.jobname }}
  cancel-in-progress: true
jobs:
  ################################################################################
  # Testing
  ################################################################################
  test:
    name: Testing
    runs-on: ubuntu-latest
    timeout-minutes: 15
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup Aqua
      uses: ./.github/actions/setup-aqua
    - name: Go Mod
      run: task app:mod
    - name: Go Test
      run: task app:test
    - name: Coverage (octocov)
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          toolpath = await io.which('octocov', true)
          await exec.exec(`${toolpath}`)
      env:
        OCTOCOV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ################################################################################
  # Matrix
  ################################################################################
  matrix:
    name: Matrix
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      targets: ${{ steps.matrix.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup Aqua
      uses: ./.github/actions/setup-aqua
    - name: Setup matrix
      id: matrix
      run: echo targets="$(task app:build:matrix | jq -R '.' | jq -cM --slurp)" >> "$GITHUB_OUTPUT"
  ################################################################################
  # Build
  ################################################################################
  build:
    needs: matrix
    name: Build (${{ matrix.target }})
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup Aqua
      uses: ./.github/actions/setup-aqua
    - name: Go Env (GOOS)
      run: echo GOOS="$(echo '${{ matrix.target }}' | cut -d '/' -f 1)" >> "$GITHUB_ENV"
    - name: Go Env (GOARCH)
      run: echo GOARCH="$(echo '${{ matrix.target }}' | cut -d '/' -f 2)" >> "$GITHUB_ENV"
    - name: Go Mod
      run: task app:mod
    - name: Go Build
      run: task app:build
  ################################################################################
  # Status Check
  ################################################################################
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: always()
    needs:
    - test
    - build
    steps:
    - name: Status OK
      if: success()
      run: exit 0
    - name: Status NG
      if: cancelled() || failure()
      run: exit 1
