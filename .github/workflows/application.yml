---
name: Application
on:
  workflow_call:
permissions: {}
concurrency:
  group: application-${{ github.ref }}
  cancel-in-progress: true
jobs:
  ################################################################################
  # Testing
  ################################################################################
  test:
    name: Testing
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup Aqua
      uses: ./.github/actions/setup-aqua
    - name: Go Mod
      run: task app:mod
    - name: Go Test
      run: task app:test
    - name: Coverage (octocov)
      uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
      with:
        script: |
          toolpath = await io.which('octocov', true)
          await exec.exec(`${toolpath}`)
      env:
        OCTOCOV_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  ################################################################################
  # Matrix
  ################################################################################
  matrix:
    name: Matrix
    runs-on: ubuntu-latest
    timeout-minutes: 3
    outputs:
      targets: ${{ steps.matrix.outputs.targets }}
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup Aqua
      uses: ./.github/actions/setup-aqua
    - name: Setup matrix
      id: matrix
      run: echo targets="$(task app:build:matrix | jq -R '.' | jq -cM --slurp)" >> "$GITHUB_OUTPUT"
  ################################################################################
  # Build
  ################################################################################
  build:
    needs: matrix
    name: Build (${{ matrix.target }})
    runs-on: ubuntu-latest
    timeout-minutes: 5
    strategy:
      matrix:
        target: ${{ fromJson(needs.matrix.outputs.targets) }}
    permissions:
      id-token: write
      attestations: write
    steps:
    - name: Checkout
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
    - name: Setup Aqua
      uses: ./.github/actions/setup-aqua
    - name: Go Vars
      id: go
      run: echo version="$(go env GOVERSION | sed -E 's/^go//')" >> "$GITHUB_OUTPUT"
    - name: Go Env (GOOS)
      run: echo GOOS="$(echo '${{ matrix.target }}' | cut -d '/' -f 1)" >> "$GITHUB_ENV"
    - name: Go Env (GOARCH)
      run: echo GOARCH="$(echo '${{ matrix.target }}' | cut -d '/' -f 2)" >> "$GITHUB_ENV"
    - name: Go Env (GOPATH)
      run: echo GOPATH="$(echo "${HOME}/.usr")" >> "$GITHUB_ENV"
    - name: Go Env (GOCACHE)
      run: echo GOCACHE="$(echo "${HOME}/.cache/go-build")" >> "$GITHUB_ENV"
    - name: Go Env (GOMODCACHE)
      run: echo GOMODCACHE="$(echo '${{ env.GOPATH }}/pkg/mod')" >> "$GITHUB_ENV"
    - name: Restore Go Cache
      id: cache-primes-restore
      uses: actions/cache/restore@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        key: go-build-${{ steps.go.outputs.version }}-${{ env.GOOS }}-${{ env.GOARCH }}-${{ hashFiles('**/go.sum') }}
        path: |
          ${{ env.GOCACHE }}
          ${{ env.GOMODCACHE }}
    - name: Go Mod
      run: task app:mod
    - name: Go Build
      run: task app:build
    - name: Artifact Attestation
      uses: actions/attest-build-provenance@c4fbc648846ca6f503a13a2281a5e7b98aa57202 # v2.0.1
      with:
        subject-path: 'bin/*'
    - name: Upload Artifact
      uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
      with:
        name: '${{ env.GOOS }}-${{ env.GOARCH }}'
        path: 'bin/*'
    - name: Get Default Branch
      id: gh
      env:
        GH_TOKEN: ${{ github.token }}
      shell: bash
      run: echo default_branch_ref_name="$(gh repo view --json defaultBranchRef --jq .defaultBranchRef.name)" >> "$GITHUB_OUTPUT"
    - name: Save Aqua Cache
      if: github.ref_name == steps.gh.outputs.default_branch_ref_name && steps.cache-primes-restore.outputs.cache-hit != 'true'
      uses: actions/cache/save@1bd1e32a3bdc45362d1e726936510720a7c30a57 # v4.2.0
      with:
        key: ${{ steps.cache-primes-restore.outputs.cache-primary-key }}
        path: |-
          ${{ env.GOCACHE }}
          ${{ env.GOMODCACHE }}
  ################################################################################
  # Status Check
  ################################################################################
  ci:
    name: CI
    runs-on: ubuntu-latest
    timeout-minutes: 3
    if: always()
    needs:
    - test
    - build
    steps:
    - name: Status OK
      if: success()
      run: exit 0
    - name: Status NG
      if: cancelled() || failure()
      run: exit 1
